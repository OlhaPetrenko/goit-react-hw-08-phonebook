{"version":3,"file":"static/js/122.0c78c89f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","redux/items/items-selectors.js","redux/filter/filter-selectors.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Section\":\"Section_Section__cTDcW\",\"title\":\"Section_title__SLHvV\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title = '', children }) {\n  return (\n    <div className={s.Section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <div className=\"container\">{children}</div>\n    </div>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"btn\":\"ContactForm_btn__wll+u\",\"input\":\"ContactForm_input__Bl93P\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function handleChange(event) {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const data = { name, number };\n    onSubmit(data);\n\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Ім'я\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          placeholder=\"Введіть ім'я контакту\"\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Номер\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          placeholder=\"Введіть номер контакту\"\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.btn}>\n        Додати контакт\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__UAAix\",\"btn\":\"ContactListItem_btn__Kdzd+\"};","import PropTypes from 'prop-types';\n\nimport s from './ContactListItem.module.css';\nfunction ContactListItem({ name, number, id, onDeleteContact }) {\n  return (\n    <li className={s.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        className={s.btn}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Видалити\n      </button>\n    </li>\n  );\n}\nContactListItem.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  const contactItem = contacts.map(({ name, number, id }) => (\n    <ContactListItem\n      key={id}\n      id={id}\n      name={name}\n      number={number}\n      onDeleteContact={onDeleteContact}\n    />\n  ));\n  return <ul className={s.list}>{contactItem}</ul>;\n}\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    })\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Знайти контакт за ім'ям\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","export const getContactsItems = store => store.contacts.items.items;\n\nexport const getLoading = store => store.contacts.items.loading;\n\nexport const getError = store => store.contacts.items.error;\n","export const getContactsFilter = store => store.contacts.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport Section from 'components/Section/Section';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\n\nimport { filterSlice } from '../../redux/filter/filter-slice';\n\nimport {\n  fetchContacts,\n  addContactItem,\n  deleteContactItem,\n} from '../../redux/items/items-operations';\n\nimport {\n  getContactsItems,\n  getLoading,\n  getError,\n} from '../../redux/items/items-selectors';\nimport { getContactsFilter } from '../../redux/filter/filter-selectors';\n\nfunction ContactsPage() {\n  const { setFilter } = filterSlice.actions;\n\n  const contactsItems = useSelector(getContactsItems);\n  const loading = useSelector(getLoading);\n  const error = useSelector(getError);\n  const contactsFilter = useSelector(getContactsFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  function onAddContactsItem(data) {\n    const nameArr = contactsItems.map(contact => contact.name.toLowerCase());\n\n    if (nameArr.includes(data.name.toLowerCase())) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContactItem(data));\n  }\n\n  function onDeleteContactItem(contactId) {\n    dispatch(deleteContactItem(contactId));\n  }\n\n  function getfilterContacts() {\n    const normFilter = contactsFilter.toLowerCase();\n    const filterContacts = contactsItems.filter(contact =>\n      contact.name.toLowerCase().includes(normFilter)\n    );\n    return filterContacts;\n  }\n\n  const filterContacts = getfilterContacts();\n\n  return (\n    <>\n      <Section title=\"Книга контактів\">\n        <ContactForm onSubmit={onAddContactsItem} />\n      </Section>\n      <Section title=\"Список контактів\">\n        <Filter\n          value={contactsFilter}\n          onChange={event => dispatch(setFilter(event.currentTarget.value))}\n        />\n        {!loading && filterContacts.length > 0 && (\n          <ContactList\n            contacts={filterContacts}\n            onDeleteContact={onDeleteContactItem}\n          />\n        )}\n        {loading && <h2>Процес завантаження триває......</h2>}\n        {!loading && error && <h2> {error} :(((</h2>}\n      </Section>\n    </>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["title","children","className","s","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","preventDefault","type","pattern","required","placeholder","onChange","id","onDeleteContact","onClick","ContactList","contacts","contactItem","map","defaultProps","getContactsItems","store","items","getLoading","loading","getError","error","getContactsFilter","filter","setFilter","filterSlice","contactsItems","useSelector","contactsFilter","dispatch","useDispatch","useEffect","fetchContacts","filterContacts","normFilter","toLowerCase","contact","includes","getfilterContacts","Section","data","alert","addContactItem","length","contactId","deleteContactItem"],"sourceRoot":""}